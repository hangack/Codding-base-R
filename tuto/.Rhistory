```R
a <- 1
```
```R
a <- 1
b = 1
```
knitr::opts_chunk$set(echo = TRUE)
```R
a <- 1
b = 1
```
```
a <- 1
b = 1
```
```
c = 3
```
```{r}
a <- 1
b = 1
print(a)
print(b)
print("b",b)
print("b"+b)
print("b %n",b)
print("b",b)
print(b)
print(a,b)
print(a+b)
```{r}
print(a)
print(b)
print(a)
print(b)
a <- 1
b = 1
setwd("D:/_Bdata/Codding-base-R/tuto/source")
setwd("D:/_Bdata/Codding-base-R/tuto/source/Rmd")
rm(c)
print(a)
print(b)
---
title: "R 기본변수"
author: "hangack"
date: '2021 12 01 '
output:
html_document
keep_md: true
---
my_num = 42
my_num = 42
my_char = "hello"
my_logis = TRUE
my_num = 42
my_char = "hello"
my_logis = TRUE
class(my_num)
class(my_char)
class(my_logis)
class(my_num)
class(my_char)
class(my_logis)
rm(a)
print(a)
rm(a)
print(a)
a <- 1    ## R만의 특수한 문법이다.
b = 1
print(a)
print(b)
rm(a)
print(a)
my_num = 42
my_char = "hello"
my_logis = TRUE
class(my_num)
class(my_char)
class(my_logis)
my_num = 42.3
class(my_num)
my_num = 42
my_char = "hello"
my_logis = TRUE
class(my_num)
class(my_char)
class(my_logis)
num_vector = c(1,2,3)
char_vector = c('a','b','c')
logi_vector = c(TRUE,FALSE,TRUE)
class(num_vector)
class(char_vector)
class(logi_vector)
# R for Data Science
## [ch.03 Data visualisation](https://r4ds.had.co.nz/data-visualisation.html)
library(tidyverse)
glimpse(mpg)
#ggplot(data = <DATA>) +
#  <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
# R for Data Science
## [ch.03 Data visualisation](https://r4ds.had.co.nz/data-visualisation.html)
library(tidyverse)
glimpse(mpg)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = after_stat(prop)))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = after_stat(prop)))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
glimpse(diamonds)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = after_stat(prop)))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
# R for Data Science
## [ch.03 Data visualisation](https://r4ds.had.co.nz/data-visualisation.html)
library(tidyverse)
library(ggplot2)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
# pakage CRAN 내려받기
# install.packages("tidyverse", dependencies = TRUE)
install.packages("randomForest", dependencies = TRUE)
# pakage CRAN 내려받기
# install.packages("tidyverse", dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
# pakage CRAN 내려받기
# install.packages("tidyverse", dependencies = TRUE)
install.packages("remotes", dependencies = TRUE)
